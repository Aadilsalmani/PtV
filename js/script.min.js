"use strict";console.time("loadTime");const map=L.map("map").setView([28.6139,77.209],5);L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:"&copy; OpenStreetMap contributors"}).addTo(map);const icons={Priority:L.icon({iconUrl:"icons/red-marker.png",iconSize:[40,40],iconAnchor:[14,42],popupAnchor:[0,-35]}),"Tier I":L.icon({iconUrl:"icons/orange-marker.png",iconSize:[40,40],iconAnchor:[14,42],popupAnchor:[0,-35]}),"Tier II":L.icon({iconUrl:"icons/yellow-marker.png",iconSize:[40,40],iconAnchor:[14,42],popupAnchor:[0,-35]}),"Tier III":L.icon({iconUrl:"icons/green-marker.png",iconSize:[40,40],iconAnchor:[14,42],popupAnchor:[0,-35]}),"Tier IV":L.icon({iconUrl:"icons/blue-marker.png",iconSize:[40,40],iconAnchor:[14,42],popupAnchor:[0,-35]}),"Tier V":L.icon({iconUrl:"icons/purple-marker.png",iconSize:[40,40],iconAnchor:[14,42],popupAnchor:[0,-35]}),default:L.icon({iconUrl:"icons/gray-marker.png",iconSize:[40,40],iconAnchor:[14,42],popupAnchor:[0,-35]})};const tableBody=document.querySelector("#places-table tbody");let allPlaces=[],markers=[],userLat,userLon,userMarker=null,userStatus=JSON.parse(localStorage.getItem("userStatus"))||{};function getDistance(e,t,a,o){const l=6371,n=(a-e)*Math.PI/180,i=(o-t)*Math.PI/180,s=Math.sin(n/2)**2+Math.cos(e*Math.PI/180)*Math.cos(a*Math.PI/180)*Math.sin(i/2)**2;return l*2*Math.atan2(Math.sqrt(s),Math.sqrt(1-s))}function locateUser(){navigator.geolocation?navigator.geolocation.getCurrentPosition(e=>{userLat=e.coords.latitude,userLon=e.coords.longitude,map.setView([userLat,userLon],12),userMarker?userMarker.setLatLng([userLat,userLon]).bindPopup("üìç You are here").openPopup():userMarker=L.marker([userLat,userLon]).addTo(map).bindPopup("üìç You are here").openPopup(),applyFilters()},e=>{console.warn("Location not available:",e.message),applyFilters()}):(alert("Geolocation not supported"),applyFilters())}function applyRowColor(e,t){const a={Visited:"#d6f5d6","Not Interested":"#f2f2f2","Spare/Skip":"#fff5cc","Want to Visit":"#ffffff","Visiting Later":"#d9f9f9"};t.style.backgroundColor=a[e]||"#fff"}function restoreFilters(){const e=JSON.parse(localStorage.getItem("userFilters"));if(!e)return;document.querySelectorAll(".pop-check").forEach(t=>{t.checked=e.popularity.includes(t.value)}),document.getElementById("distanceFilter").value=e.distance;const t=document.getElementById("statusFilter");t&&(t.value=e.status)}function applyFilters(){const e={popularity:Array.from(document.querySelectorAll(".pop-check:checked")).map(e=>e.value),distance:document.getElementById("distanceFilter").value,status:document.getElementById("statusFilter")?.value||"All"};localStorage.setItem("userFilters",JSON.stringify(e));const t=Array.from(document.querySelectorAll(".pop-check:checked")).map(e=>e.value),a=document.getElementById("distanceFilter").value,o=document.getElementById("statusFilter")?.value||"All";tableBody.innerHTML="",markers.forEach(e=>map.removeLayer(e)),markers=[];let l=allPlaces.filter(l=>{if(!l.Latitude||!l.Longitude)return!1;userLat&&userLon?l.Distance=getDistance(userLat,userLon,l.Latitude,l.Longitude):l.Distance=null;let n=t.includes(l.Popularity);return"All"!==a&&l.Distance&&l.Distance>parseFloat(a)&&(n=!1),(userStatus[l.Name]||"Want to Visit")!==o&&"All"!==o&&(n=!1),n});userLat&&userLon&&l.sort((e,t)=>e.Distance-t.Distance),l.slice(0,200).forEach(e=>{const t=icons[e.Popularity]||icons.default,a=L.marker([e.Latitude,e.Longitude],{icon:t}).addTo(map);a.bindPopup(`
  <b>${e.Name}</b><br>
  ${e.CountryState || "Unknown Location"}<br>
  ${e.Popularity}<br>
  ${e.Distance ? e.Distance.toFixed(2) + " km" : ""}<br>
  <button class="dir-btn" onclick="openDirections(${e.Latitude}, ${e.Longitude}, '${e.Name.replace(/'/g, "\\'")}')">üß≠ Get Directions</button>
`),markers.push(a);const o=document.createElement("tr");o.innerHTML=`<td>${e.Name}</td><td>${e.Popularity}</td><td>${e.Distance?e.Distance.toFixed(2):"-"}</td><td><select class="status-select" data-name="${e.Name}"><option value="Want to Visit">Want to Visit</option><option value="Visiting Later">Visiting Later</option><option value="Visited">Visited</option><option value="Not Interested">Not Interested</option><option value="Spare/Skip">Spare/Skip</option></select></td>`;const l=o.querySelector(".status-select");l.value=userStatus[e.Name]||"Want to Visit",applyRowColor(l.value,o),l.addEventListener("change",t=>{const a=t.target.value;userStatus[e.Name]=a,localStorage.setItem("userStatus",JSON.stringify(userStatus)),applyRowColor(a,o)}),o.addEventListener("click",()=>{map.setView([e.Latitude,e.Longitude],14),a.openPopup()}),tableBody.appendChild(o)}),document.getElementById("loading-overlay").style.display="none",console.timeEnd("loadTime")}fetch("data/tourist_data.json").then(e=>e.json()).then(e=>{allPlaces=e,restoreFilters(),locateUser()}).catch(e=>console.error("Data load error:",e)),document.querySelectorAll(".pop-check")?.forEach(e=>e.addEventListener("change",applyFilters)),document.getElementById("distanceFilter").addEventListener("change",applyFilters),document.getElementById("statusFilter")?.addEventListener("change",applyFilters),lucide.createIcons();const filterToggle=document.getElementById("filter-toggle"),filterBar=document.getElementById("filter-bar"),filterOverlay=document.getElementById("filter-overlay");filterToggle.addEventListener("click",()=>{const e=filterBar.classList.toggle("show");filterOverlay.style.display=e?"block":"none"}),filterOverlay.addEventListener("click",()=>{filterBar.classList.remove("show"),filterOverlay.style.display="none"});const locateBtn=document.getElementById("locate-me");locateBtn.addEventListener("click",()=>{userLat&&userLon?(map.flyTo([userLat,userLon],12,{animate:!0,duration:1.2}),userMarker?userMarker.setLatLng([userLat,userLon]).bindPopup("üìç You are here").openPopup():userMarker=L.marker([userLat,userLon]).addTo(map).bindPopup("üìç You are here").openPopup()):navigator.geolocation?navigator.geolocation.getCurrentPosition(e=>{userLat=e.coords.latitude,userLon=e.coords.longitude,map.flyTo([userLat,userLon],12,{animate:!0,duration:1.2}),userMarker?userMarker.setLatLng([userLat,userLon]).bindPopup("üìç You are here").openPopup():userMarker=L.marker([userLat,userLon]).addTo(map).bindPopup("üìç You are here").openPopup()},e=>{alert("‚ö†Ô∏è Unable to access location. Please enable GPS or try again."),console.warn("Locate button error:",e.message)}):alert("‚ùå Geolocation not supported by your device/browser.")}),"serviceWorker"in navigator&&navigator.serviceWorker.register("service-worker.js").then(()=>console.log("Service Worker registered")).catch(e=>console.error("SW registration failed:",e)),window.addEventListener("load",()=>{setTimeout(()=>{const e=document.getElementById("splash-screen");e&&(e.classList.add("fade-out"),setTimeout(()=>e.style.display="none",600))},1500)}),document.getElementById("reset-filters").addEventListener("click",()=>{document.querySelectorAll(".pop-check").forEach(e=>e.checked=!0),document.getElementById("distanceFilter").value="25";const e=document.getElementById("statusFilter");e&&(e.value="All"),localStorage.removeItem("userFilters"),applyFilters()});

function openDirections(lat, lon, name) {
  const confirmMsg = `Do you want to open directions to "${name}" in Google Maps?`;
  if (confirm(confirmMsg)) {
    const mapsUrl = `https://www.google.com/maps/dir/?api=1&destination=${lat},${lon}`;
    window.open(mapsUrl, "_blank");
  }
}


// ü™Ñ Listen for Service Worker update notifications
navigator.serviceWorker?.addEventListener("message", event => {
  if (event.data && event.data.type === "NEW_VERSION_AVAILABLE") {
    showUpdateToast();
  }
});

// ‚ú® Toast for update notification
function showUpdateToast() {
  const toast = document.createElement("div");
  toast.id = "update-toast";
  toast.innerHTML = "‚ú® PtV updated! Tap to refresh";
  document.body.appendChild(toast);

  toast.addEventListener("click", () => location.reload(true));

  setTimeout(() => toast.classList.add("show"), 100);
  setTimeout(() => toast.classList.remove("show"), 10000);
}


// üìù Feedback modal logic
const feedbackBtn = document.getElementById("feedback-btn");
const feedbackModal = document.getElementById("feedback-modal");
const cancelBtn = document.getElementById("cancel-feedback");
const submitBtn = document.getElementById("submit-feedback");
const feedbackText = document.getElementById("feedback-text");

feedbackBtn.addEventListener("click",()=>feedbackModal.classList.add("show"));
cancelBtn.addEventListener("click",()=>feedbackModal.classList.remove("show"));

submitBtn.addEventListener("click",()=>{
  const text = feedbackText.value.trim();
  if(!text){alert("Please write something first.");return;}
  
  const data = {
    message: text,
    timestamp: new Date().toLocaleString(),
    userLocation: { lat: userLat, lon: userLon }
  };

  console.log("Feedback received:", data);
  alert("Thank you for your feedback! üôè");
  
  feedbackText.value="";
  feedbackModal.classList.remove("show");
});
